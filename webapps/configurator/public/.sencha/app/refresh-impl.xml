<project name="refresh-impl">
    <import file="bootstrap-impl.xml"/>

    <target name="-init-refresh" depends="-init-app-js-files">
        <property name="app.bootstrap.base.path"
                  value="${build.bootstrap.metadata.dir}"/>
    </target>

    <target name="-refresh-app-manifest" if="build.enable.appmanifest" depends="-init-refresh">
        <x-compile refid="${compiler.ref.id}">
            <![CDATA[
                microload
                    -operation=microloader
                    -microloaderPath=${app.microloader.bootstrap}
                    -bootPath=${build.boot.file}
                    -out=${app.bootstrap.js}
                and
                microload
                    -operation=manifest
                    -bootstrap
                    -tpl={0}
                    -basePath=${app.bootstrap.base.path}
                    -out=${build.json.bootstrap.path}
            ]]>
        </x-compile>
    </target>
    
    <target name="-refresh-app-bootstrap" unless="build.enable.appmanifest" depends="-init-refresh">

        <!--regenerate class system metadata-->
        <x-bootstrap file="${app.bootstrap.js}"
                     basedir="${app.bootstrap.base.path}"
                     overrideTpl="${bootstrap.override.tpl}"
                     overrideTplType="${bootstrap.override.tpltype}"
                     includeOverrides="${bootstrap.include.overrides}"
                     includeBoot="${bootstrap.include.boot}"/>

        <!--regenerate json manifest bootstrap data-->
        <if>
            <equals arg1="${app.page.mode}" arg2="xcompile"/>
            <then>
                <!--
                append the microloader and manifest to the end
                of bootstrap.js
                -->
                <x-compile refid="${compiler.ref.id}">
                    <![CDATA[
                    microload
                        -operation=microloader
                        -microloaderPath=${app.microloader.bootstrap}
                        -append
                        -out=${app.bootstrap.js}
                    ]]>
                </x-compile>
            </then>
        </if>

        <!--
        create / overwrite bootstrap.json, which will be used
        by the default development.js microloader
        -->

<echo file="${build.json.bootstrap.path}">
/**
 * This file is generated by Sencha Cmd and should NOT be edited. It is a
 * combination of content from app.json, and all required package's package.json
 * files.  Customizations should be placed in app.json.
 */
</echo>
        <x-compile refid="${compiler.ref.id}">
            <![CDATA[
            microload
                -operation=json
                -bootstrap
                -append
                -tpl={0}
                -basePath=${app.bootstrap.base.path}
                -out=${build.json.bootstrap.path}
            ]]>
        </x-compile>
    </target>
    
    <!--
    Refreshes the application's bootstrap javascript and microloader manifest
    '-detect-app-build-properties' is defined in js-impl.xml
    -->
    <target name="-refresh-app" 
            depends="-detect-app-build-properties,
                     -refresh-app-manifest,
                     -refresh-app-bootstrap"/>
    
    <!--
    Refresh app
    -->
    <target name="-before-refresh"/>
    <target name="-refresh" depends="-refresh-app"/>
    <target name="-after-refresh"/>
</project>